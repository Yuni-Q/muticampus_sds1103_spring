스프링 내용 정리
1. DI 객체 관리
2. 데이터베이스 (스프링, 마이바티스, 스프링+마이바티스)
3. AOP (Aspect Oriented Programming)
4. Web MVC
--------------------------------------------------------------------------------------------------
절차지향 vs 객체지향 vs 관점지향
--------------------------------------------------------------------------------------------------
Boy 클래스
 배가 고프다.
 장어구이를 만든다. // 핵심관심사항
 음식을 먹는다.
 설거지를 한다.
 엄마를 부른다.
*****************************************************
Girl 클래스
 배가 고프다
 떡볶이를 만든다. // 핵심관심사항
 음식을 먹는다.
 설거지를 한다.
 엄마를 부른다.
----------------------------------------------------------------------------------------------------
Dependency : spring context, core, aop/ aspectj rt, weaver
----------------------------------------------------------------------------------------------------
test01 : AOP 미적용
test02 : Spring 객체관리 파일을 통해 AOP 적용.(before,after-returning,after-throwing,after)
test03 : Spring 객체관리 파일을 통해 AOP 적용.(around)
test04 : test02의 작업에서 makeFood에 전달되는 인자값과 실행 결과를 
	before랑 after-returning 에서 받아보는 작업
test05 : test02의 애노테이션 버전
test06 : test03의 애노테이션 버전
test07 : test04의 애노테이션 버전
-----------------------------------------------------------------------------------------------------
JoinPoint : 따로 작성한 공통관심사항을 핵심관심사항 수행 전? 후? 어디에 적용할지
	(ex: before, after, after-returning, after-throwing, around)
PointCut : 공통관심사항을 적용할 대상 핵심관심사항 실행 시점.
-----------------------------------------------------------------------------------------------------
PointCut(Aspect 적용할 핵심 관심사항 선택하기 문법)
execution, within, bean
 * execution : 공통관심사항을 적용할 대상 메소드
  [ex]
	execution(public void set*(..))
	>> 리턴 값이 없고 이름이 set으로 시작하며 파라미터가	 
	0개 이상인 모든 메소드

	execution(* get*(*))
	>> get으로 시작하며 반환자료형 상관없고 파라미터 무조건 1개인 메소드

	execution(String join*(*,*))
	>> 메소드 이름이 join으로 시작하며 반환형 String이고 파라미터 2개인 메소드

 * within : 공통관심사항을 적용할 대상 클래스
  [ex]
	within(test01.service.MemberService)
	>> test01 패키지의 하위패키지 service 패키지에 MemberService 클래스로
	  생성된 모든 객체의 모든 메소드

	within(test01.dao.*)
	>> test01 하위 패키지 dao 패키지에 있는 모든 클래스의 모든 메소드

 * bean : 공통관심사항을 적용할 대상 객체
  [ex]
	bean(girl)
	bean(*oy)





















